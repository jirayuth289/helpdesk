{"version":3,"sources":["lang/locale sync /^/.//.*/.json$","lang/get-messages.js","lang/intl-provider.js","lang/get-locale.js","reduxs/problem/action.ts","screens/problem/index.tsx","reduxs/customer/action.ts","screens/customer/index.tsx","screens/problem/problemCreation.tsx","screens/customer/customerCreation.tsx","screens/app/app-router.tsx","screens/app/app.tsx","router.tsx","reduxs/problem/reducers.ts","reduxs/customer/reducers.ts","reduxs/root-reducers.tsx","helpers/superFetch.ts","configs.ts","reduxs/customer/service.ts","helpers/error-handler.tsx","reduxs/customer/saga.ts","reduxs/problem/service.ts","reduxs/problem/saga.ts","reduxs/root-sagas.tsx","reduxs/store.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","getMessages","locale","a","require","console","error","LocaleContext","React","createContext","cache","createIntlCache","IntlProvider","children","messages","useState","createIntl","intl","setIntl","setLocale","nextLocale","nextMessages","cookie","set","expires","useEffect","Provider","value","acceptLanguages","defaultLocale","getLocale","ctx","cookieLocale","get","includes","actions","GET_PROBLEM","GET_PROBLEM_SUCCESS","GET_PROBLEM_ERROR","CREATE_PROBLEM","CREATE_PROBLEM_SUCCESS","CREATE_PROBLEM_ERROR","getDataProblem","keyword","type","createProblem","data","redirect","Search","Input","Problem","onSearch","props","this","className","title","subTitle","style","width","direction","size","display","justifyContent","placeholder","onClick","history","push","icon","PlusOutlined","columns","dataSource","rowKey","record","problemId","Component","connect","problemReducers","key","render","moment","createdAt","format","Customer","customerName","dataIndex","Location","project","addressNo","repairType","SEARCH_CUSTOMER","SEARCH_CUSTOMER_SUCCESS","SEARCH_CUSTOMER_ERROR","GET_CUSTOMER","GET_CUSTOMER_SUCCESS","GET_CUSTOMER_ERROR","CREATE_CUSTOMER","CREATE_CUSTOMER_SUCCESS","CREATE_CUSTOMER_ERROR","searchCustomerByName","name","getAll","createCustomer","customerId","customerReducers","to","danger","actionsCustomer","Option","Select","ProblemCreation","formRef","createRef","onFinish","values","state","description","note","location","showLocationForm","undefined","replace","onFinishFailed","errorInfo","log","handleSearch","onSelect","options","setState","handleChange","query","URLSearchParams","search","parseInt","current","setFieldsValue","onBack","window","back","ref","initialValues","remember","autoComplete","layout","wrapperCol","md","sm","xs","Item","label","rules","required","message","dataSearch","dropdownMatchSelectWidth","defaultValue","onChange","TextArea","rows","htmlType","CustomerCreation","mobileNumber","AppRouter","url","exact","path","component","Header","Layout","Sider","Content","App","collapsed","toggle","match","height","trigger","collapsible","theme","mode","defaultSelectedKeys","QuestionCircleOutlined","UserOutlined","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","PrivateRoute","rest","routeProps","pathname","initState","loading","action","fetchObj","methods","bindMethod","forEach","method","fetch","bind","bodyObj","headers","Accept","credentials","body","JSON","stringify","response","json","status","localStorage","removeItem","endpoint","process","table","pageSize","searchCustomerByname","SuperFetch","configs","getAllCustomer","post","openNotificationWithIcon","notification","searchCustomerWorker","getAllCustomerWorker","createCustomerWorker","takeEvery","hide","race","res","call","services","timeout","delay","object","put","all","fork","getService","getDataProblemWorker","createProblemWorker","rootSaga","customerSagas","dashboardSagas","createHistory","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","store","createStore","combineReducers","router","connectRouter","rootReducers","compose","applyMiddleware","run","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bfb393e2.chunk.js","sourcesContent":["var map = {\n\t\"./en.json\": 163,\n\t\"./th.json\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 206;","const getMessages = async (locale) => {\n  try {\n    return require(`../lang/locale/${locale}.json`);\n  } catch (error) {\n    console.error(error)\n    return require(`../lang/locale/en.json`);\n  }\n}\n\nexport default getMessages\n","import React, { useState, useEffect } from \"react\";\nimport { createIntl, createIntlCache, RawIntlProvider } from \"react-intl\";\nimport cookie from \"js-cookie\";\nimport getMessages from \"./get-messages\";\n\nconst LocaleContext = React.createContext();\nexport const useLocale = () => React.useContext(LocaleContext);\n\nconst cache = createIntlCache();\nconst IntlProvider = ({ children, locale, messages }) => {\n  const [intl, setIntl] = useState(createIntl({ locale, messages }, cache));\n\n  const setLocale = async (nextLocale) => {\n    // only triggered by used in this case go and fetch new locale data\n    const nextMessages = await getMessages(nextLocale);\n    setIntl(createIntl({ locale: nextLocale, messages: nextMessages }, cache));\n    cookie.set(\"locale\", nextLocale, { expires: 365 });\n  };\n\n  useEffect(() => {\n    setIntl(createIntl({ locale, messages }, cache));\n  }, [locale]);\n\n  return (\n    <LocaleContext.Provider value={{ setLocale }}>\n      <RawIntlProvider value={intl}>{children}</RawIntlProvider>\n    </LocaleContext.Provider>\n  );\n};\nexport default IntlProvider;\n","//import nextCookie from 'next-cookies'\nimport cookie from 'js-cookie'\n\nconst acceptLanguages = ['en', 'th']\nconst defaultLocale = acceptLanguages[0]\n\nconst getLocale = async (ctx) => {\n  try {\n    const cookieLocale = cookie.get(\"locale\");\n    // console.log(\"cookieLocale\", cookieLocale);\n    //nextCookie(ctx).locale\n    let locale = defaultLocale\n    if (cookieLocale) {\n      // check if user has set locale\n      locale = acceptLanguages.includes(cookieLocale) ? cookieLocale : defaultLocale\n    } else {\n      // check if user has set locale\n      // const systemLocale = ctx.req.headers['accept-language'] || navigator.language || defaultLocale\n      // locale = acceptLanguages.includes(systemLocale) ? systemLocale : defaultLocale\n      locale = acceptLanguages.includes(cookieLocale)\n        ? cookieLocale\n        : defaultLocale;\n      cookie.set('locale', locale, { expires: 365 })\n    }\n    return locale\n  } catch (error) {\n    return defaultLocale\n  }\n}\n\nexport default getLocale\n","import { DataCustomerCreation } from \"./reducers\";\n\nconst actions = {\n  GET_PROBLEM: \"GET_PROBLEM\",\n  GET_PROBLEM_SUCCESS: \"GET_PROBLEM_SUCCESS\",\n  GET_PROBLEM_ERROR: \"GET_PROBLEM_ERROR\",\n\n  CREATE_PROBLEM: \"CREATE_PROBLEM\",\n  CREATE_PROBLEM_SUCCESS: \"CREATE_PROBLEM_SUCCESS\",\n  CREATE_PROBLEM_ERROR: \"CREATE_PROBLEM_ERROR\",\n\n  getDataProblem: (keyword: string) => ({\n    type: actions.GET_PROBLEM,\n    keyword\n  }),\n\n  createProblem: (data: DataCustomerCreation, redirect) => ({\n    type: actions.CREATE_PROBLEM,\n    data,\n    redirect\n  }),\n};\n\nexport default actions;\n","import \"moment/locale/th\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Tag, Space, PageHeader, Button, Input } from \"antd\";\nimport \"./style.css\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport actions from \"../../reduxs/problem/action\";\nimport { ProblemSchema, StateProblem } from \"../../reduxs/problem/reducers\";\n\nconst { getDataProblem } = actions;\nconst { Search } = Input;\n\ninterface Props extends StateProblem {\n  getDataProblem(keyword: string): Function;\n  history: any;\n}\n\nexport class Problem extends Component<Props, any> {\n  componentDidMount() {\n    this.props.getDataProblem('');\n  }\n\n  onSearch = (value) =>{\n    this.props.getDataProblem(value);\n  }\n\n  render() {\n    return (\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"รายการแจ้งทั้งหมด\"\n        subTitle=\"\"\n      >\n        <Space\n          style={{\n            width: \"100%\",\n          }}\n          direction=\"vertical\"\n          size=\"large\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Search\n              size=\"large\"\n              placeholder=\"ค้นหา ข้อมูลปัญหา\"\n              onSearch={this.onSearch}\n              style={{ width: 300 }}\n            />\n            <Button\n              size=\"large\"\n              onClick={() => this.props.history.push(\"/home/new-problem\")}\n              icon={<PlusOutlined />}\n            >\n              สร้างใหม่\n            </Button>\n          </div>\n          <Table\n            size=\"large\"\n            columns={columns}\n            dataSource={this.props.data}\n            rowKey={(record) => record.problemId}\n          />\n        </Space>\n      </PageHeader>\n    );\n  }\n}\n\nconst getStateToProps = ({ problemReducers }) => {\n  return { ...problemReducers };\n};\n\nexport default connect(getStateToProps, { getDataProblem })(Problem);\n\nconst columns = [\n  {\n    title: \"วันที่\",\n    key: \"name\",\n    render: (value: ProblemSchema) => (\n      <div>{moment(value.createdAt).format(\"lll\")}</div>\n    ),\n  },\n  {\n    title: \"ชื่อลูกค้า\",\n    key: \"name\",\n    render: (value: ProblemSchema) => <div>{value.Customer.customerName}</div>,\n  },\n  {\n    title: \"ประเภท\",\n    dataIndex: \"type\",\n    key: \"type\",\n  },\n  {\n    title: \"รายละเอียด\",\n    dataIndex: \"description\",\n    key: \"description\",\n  },\n  {\n    title: \"หมายเหตุ\",\n    dataIndex: \"note\",\n    key: \"note\",\n  },\n  {\n    title: \"โครงการ\",\n    key: \"project\",\n    render: (value: ProblemSchema) => <div>{value.Location?.project || '-'}</div>,\n  },\n  {\n    title: \"เลขที่บ้าน\",\n    key: \"addressNo\",\n    render: (value: ProblemSchema) => <div>{value.Location?.addressNo || '-'}</div>,\n  },\n  {\n    title: \"หมวดหมู่แจ้งซ่อม\",\n    key: \"category\",\n    render: (value: ProblemSchema) => <div>{value.Location?.repairType || '-'}</div>,\n  },\n];\n","import { CustomerData } from \"./reducers\";\n\nconst actions = {\n  SEARCH_CUSTOMER: \"SEARCH_CUSTOMER\",\n  SEARCH_CUSTOMER_SUCCESS: \"SEARCH_CUSTOMER_SUCCESS\",\n  SEARCH_CUSTOMER_ERROR: \"SEARCH_CUSTOMER_ERROR\",\n\n  GET_CUSTOMER: \"GET_CUSTOMER\",\n  GET_CUSTOMER_SUCCESS: \"GET_CUSTOMER_SUCCESS\",\n  GET_CUSTOMER_ERROR: \"GET_CUSTOMER_ERROR\",\n\n  CREATE_CUSTOMER: \"CREATE_CUSTOMER\",\n  CREATE_CUSTOMER_SUCCESS: \"CREATE_CUSTOMER_SUCCESS\",\n  CREATE_CUSTOMER_ERROR: \"CREATE_CUSTOMER_ERROR\",\n\n  searchCustomerByName: (name: string) => ({\n    type: actions.SEARCH_CUSTOMER,\n    name,\n  }),\n\n  getAll: (name?: string) => ({\n    type: actions.GET_CUSTOMER,\n    name,\n  }),\n\n  createCustomer: (data: CustomerData, redirect: Function) => ({\n    type: actions.CREATE_CUSTOMER,\n    data,\n    redirect\n  }),\n};\n\nexport default actions;\n","import \"moment/locale/th\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Table, Tag, Space, PageHeader, Button, Input } from \"antd\";\nimport \"./style.css\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport actions from \"../../reduxs/customer/action\";\nimport { CustomerData, StateCustomer } from \"../../reduxs/customer/reducers\";\n\nconst { getAll } = actions;\nconst { Search } = Input;\n\ninterface Props extends StateCustomer {\n  getAll(name?: string): Function;\n  history: any;\n}\n\nexport class Customer extends Component<Props, any> {\n  componentDidMount() {\n    this.props.getAll(\"\");\n  }\n\n  onSearch = (value) => {\n    this.props.getAll(value);\n  };\n\n  render() {\n    return (\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"รายชื่อลูกค้า\"\n        subTitle=\"\"\n      >\n        <Space\n          style={{\n            width: \"100%\",\n          }}\n          direction=\"vertical\"\n          size=\"large\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Search\n              size=\"large\"\n              placeholder=\"ค้นหา ...\"\n              onSearch={this.onSearch}\n              style={{ width: 300 }}\n            />\n            <Button\n              size=\"large\"\n              onClick={() => this.props.history.push(\"/home/new-customer\")}\n              icon={<PlusOutlined />}\n            >\n              สร้างใหม่\n            </Button>\n          </div>\n          <Table\n            size=\"large\"\n            columns={columns}\n            dataSource={this.props.data}\n            rowKey={(record) => record.customerId as number}\n          />\n        </Space>\n      </PageHeader>\n    );\n  }\n}\n\nconst getStateToProps = ({ customerReducers }) => {\n  return { ...customerReducers };\n};\n\nexport default connect(getStateToProps, { getAll })(Customer);\n\nconst columns = [\n  {\n    title: \"ชื่อลูกค้า\",\n    key: \"customerName\",\n    dataIndex: \"customerName\",\n  },\n  {\n    title: \"เบอร์มือถือ\",\n    dataIndex: \"mobileNumber\",\n    key: \"mobileNumber\",\n  },\n  {\n    title: \"วันที่เพิ่มข้อมูล\",\n    key: \"createdAt\",\n    render: (value: CustomerData) => (\n      <div>{moment(value.createdAt).format(\"lll\")}</div>\n    ),\n  },\n\n  {\n    title: \"Action\",\n    key: \"action\",\n    render: (value: CustomerData) => (\n      <Link\n        to={`/home/new-problem?customerId=${value.customerId}&customerName=${value.customerName}`}\n      >\n        <Button type=\"link\" danger>\n          แจ้งปัญหา\n        </Button>\n      </Link>\n    ),\n  },\n];\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Space,\n  PageHeader,\n  Button,\n  Input,\n  Form,\n  AutoComplete,\n  Select,\n} from \"antd\";\nimport \"./style.css\";\nimport actions from \"../../reduxs/problem/action\";\nimport { DataCustomerCreation } from \"../../reduxs/problem/reducers\";\nimport actionsCustomer from \"../../reduxs/customer/action\";\nimport { StateCustomer } from \"../../reduxs/customer/reducers\";\nimport { FormInstance } from \"antd/lib/form\";\n\nconst { createProblem } = actions;\nconst { searchCustomerByName } = actionsCustomer;\nconst { Option } = Select;\n\ninterface Props extends StateCustomer {\n  searchCustomerByName(name: string): Function;\n  createProblem(data: DataCustomerCreation, redirect: Function): Function;\n  history: any;\n  location: any;\n}\n\nexport class ProblemCreation extends Component<Props, any> {\n  formRef = React.createRef<FormInstance>();\n\n  constructor(props: any) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      customerId: parseInt(query.get(\"customerId\") as string),\n      customerName: query.get(\"customerName\"),\n      showLocationForm: false,\n    };\n  }\n\n  componentDidMount() {\n    this.formRef.current?.setFieldsValue({\n      customerName: this.state.customerName,\n    });\n  }\n\n  onFinish = (values: any) => {\n    this.props.createProblem(\n      {\n        customerId: this.state.customerId,\n        type: values.type,\n        description: values.description,\n        note: values.note,\n        location: this.state.showLocationForm\n          ? {\n              project: values.project,\n              addressNo: values.addressNo,\n              repairType: values.repairType,\n            }\n          : undefined,\n      },\n      () => this.props.history.replace(\"/home\")\n    );\n  };\n\n  onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  handleSearch = (value: string) => {\n    this.props.searchCustomerByName(value);\n  };\n\n  onSelect = (value: string, options) => {\n    this.setState({\n      customerId: options.key,\n    });\n  };\n\n  handleChange = (value) => {\n    if (value === \"แจ้งซ่อม\") {\n      this.setState({\n        showLocationForm: true,\n      });\n    } else {\n      this.setState({\n        showLocationForm: false,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"แจ้งปัญหา\"\n        subTitle=\"\"\n        onBack={() => window.history.back()}\n      >\n        <Form\n          ref={this.formRef}\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={this.onFinish}\n          onFinishFailed={this.onFinishFailed}\n          autoComplete=\"off\"\n          layout=\"vertical\"\n          size=\"middle\"\n          wrapperCol={{ md: 10, sm: 24, xs: 24 }}\n        >\n          <Form.Item\n            label=\"ชื่อลูกค้า\"\n            name=\"customerName\"\n            rules={[\n              { required: true, message: \"Please input your customer name!\" },\n            ]}\n          >\n            <AutoComplete\n              size=\"large\"\n              options={this.props.dataSearch}\n              dropdownMatchSelectWidth={252}\n              onSelect={this.onSelect}\n              onSearch={this.handleSearch}\n            >\n              <Input.Search size=\"large\" placeholder=\"ค้นหา ...\" />\n            </AutoComplete>\n          </Form.Item>\n\n          <Form.Item\n            label=\"ประเภทการแจ้ง\"\n            name=\"type\"\n            rules={[{ required: true, message: \"Please input your type!\" }]}\n          >\n            <Select size=\"large\" defaultValue=\"\" onChange={this.handleChange}>\n              <Option value=\"แจ้งซ่อม\">แจ้งซ่อม</Option>\n              <Option value=\"Complain\">Complain</Option>\n              <Option value=\"ร้องเรียน\">ร้องเรียน</Option>\n              <Option value=\"สอบถามข้อมูล\">สอบถามข้อมูล</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label=\"รายละเอียด\"\n            name=\"description\"\n            rules={[\n              { required: true, message: \"Please input your description!\" },\n            ]}\n          >\n            <Input.TextArea rows={3} size=\"large\" />\n          </Form.Item>\n\n          <Form.Item label=\"หมายเหตุ\" name=\"note\" rules={[{ required: false }]}>\n            <Input size=\"large\" />\n          </Form.Item>\n\n          {this.state.showLocationForm ? (\n            <>\n              <Form.Item\n                label=\"โครงการ\"\n                name=\"project\"\n                rules={[\n                  { required: true, message: \"Please input your project!\" },\n                ]}\n              >\n                <Input size=\"large\" />\n              </Form.Item>\n\n              <Form.Item\n                label=\"บ้านเลขที่\"\n                name=\"addressNo\"\n                rules={[\n                  { required: true, message: \"Please input your address no!\" },\n                ]}\n              >\n                <Input size=\"large\" />\n              </Form.Item>\n\n              <Form.Item\n                label=\"หมวดหมู่แจ้งซ่อม\"\n                name=\"repairType\"\n                rules={[\n                  { required: true, message: \"Please input your repair type!\" },\n                ]}\n              >\n                <Input size=\"large\" />\n              </Form.Item>\n            </>\n          ) : (\n            \"\"\n          )}\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              บันทึก\n            </Button>\n          </Form.Item>\n        </Form>\n      </PageHeader>\n    );\n  }\n}\n\nconst mapStateToProps = ({ customerReducers }) => {\n  return { ...customerReducers };\n};\n\nexport default connect(mapStateToProps, {\n  searchCustomerByName,\n  createProblem,\n})(ProblemCreation);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  PageHeader,\n  Button,\n  Input,\n  Form,\n  Select,\n} from \"antd\";\nimport \"./style.css\";\nimport actionsCustomer from \"../../reduxs/customer/action\";\nimport { StateCustomer, CustomerData } from \"../../reduxs/customer/reducers\";\nimport { FormInstance } from \"antd/lib/form\"; \n\nconst { createCustomer } = actionsCustomer;\n\ninterface Props extends StateCustomer {\n  createCustomer(data: CustomerData, redirect: Function): Function;\n  history: any;\n}\n\nexport class CustomerCreation extends Component<Props, any> {\n  formRef = React.createRef<FormInstance>();\n\n  onFinish = (values: any) => {\n    this.props.createCustomer(\n      {\n        customerName: values.customerName,\n        mobileNumber: values.mobileNumber,\n        customerId: undefined,\n        createdAt: undefined,\n      },\n      () => this.props.history.replace(\"/home/customer\")\n    );\n  };\n\n  render() {\n    return (\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"เพิ่มลูกค้าใหม่\"\n        subTitle=\"\"\n        onBack={() => window.history.back()}\n      >\n        <Form\n          ref={this.formRef}\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={this.onFinish}\n          autoComplete=\"off\"\n          layout=\"vertical\"\n          size=\"middle\"\n          wrapperCol={{ md: 10, sm: 24, xs: 24 }}\n        >\n          <Form.Item\n            label=\"ชื่อ\"\n            name=\"customerName\"\n            rules={[\n              { required: true, message: \"Please input your customer name!\" },\n            ]}\n          >\n            <Input size=\"large\" />\n          </Form.Item>\n\n          <Form.Item\n            label=\"เบอร์มือถือ\"\n            name=\"mobileNumber\"\n            rules={[\n              { required: true, message: \"Please input your mobile number!\" },\n            ]}\n          >\n            <Input size=\"large\" />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              บันทึก\n            </Button>\n          </Form.Item>\n        </Form>\n      </PageHeader>\n    );\n  }\n}\n\nconst mapStateToProps = ({ customerReducers }) => {\n  return { ...customerReducers };\n};\n\nexport default connect(mapStateToProps, {\n  createCustomer,\n})(CustomerCreation);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Problem, Customer, ProblemCreation, CustomerCreation } from \"../\";\n\nclass AppRouter extends React.Component<any, any> {\n  render() {\n    const { url } = this.props;\n\n    return (\n      <Switch>\n        <Route exact path={`${url}`} component={Problem} />\n        <Route exact path={`${url}/customer`} component={Customer} />\n        <Route\n          exact\n          path={`${url}/new-customer`}\n          component={CustomerCreation}\n        />\n        <Route exact path={`${url}/new-problem`} component={ProblemCreation} />\n      </Switch>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport AppRouter from \"./app-router\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\nimport \"./style.css\";\n\nconst { Header, Sider, Content } = Layout;\n\ninterface CPMprops {\n  match: any;\n}\ninterface CMPstate {\n  collapsed: boolean;\n}\nclass App extends React.Component<CPMprops, CMPstate> {\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const { url } = this.props.match;\n\n    return (\n      <Layout>\n        <Sider\n          style={{\n            height: \"100vh\",\n          }}\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n        >\n          <div className=\"logo\"></div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\" icon={<QuestionCircleOutlined />}>\n              <Link to=\"/home\">แจ้งปัญหา</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\n              <Link to=\"/home/customer\">รายชื่อลูกค้า</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n            {React.createElement(\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n              {\n                className: \"trigger\",\n                onClick: this.toggle,\n              }\n            )}\n          </Header>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              margin: \"24px 16px\",\n              padding: 24,\n              minHeight: 280,\n            }}\n          >\n            <AppRouter url={url} />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { App } from \"./screens\";\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => {\n        return <Component {...routeProps} />;\n      }}\n    />\n  );\n};\n\ninterface P {\n  history: any;\n}\nconst PublicRoutes = ({ history }: P) => {\n  return (\n    <ConnectedRouter history={history}>\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/home\",\n                }}\n              />\n            );\n          }}\n        />\n        <PrivateRoute path=\"/home\" component={App} />\n      </div>\n    </ConnectedRouter>\n  );\n};\n\nexport default connect()(PublicRoutes);\n","import actions from \"./action\";\n\nexport interface DataCustomerCreation {\n  customerId: number | undefined;\n  type: string;\n  description: string;\n  note?: string;\n  location?: {\n    project: string;\n    addressNo: string;\n    repairType: string;\n  };\n}\n\nexport interface ProblemSchema {\n  problemId: number;\n  customerId: number;\n  type: string;\n  description: string;\n  note: string;\n  createdAt: string;\n  Location: {\n    project: string;\n    addressNo: string;\n    repairType: string;\n  };\n  Customer: {\n    customerName: string;\n  };\n}\n\nexport interface StateProblem {\n  loading: boolean;\n  data: ProblemSchema[];\n}\n\nconst initState: StateProblem = {\n  loading: false,\n  data: [],\n};\n\nexport default function (state = initState, action: any) {\n  switch (action.type) {\n    case actions.GET_PROBLEM:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.GET_PROBLEM_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.data,\n      };\n    case actions.GET_PROBLEM_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"./action\";\n\nexport interface CustomerSearch {\n  value: number;\n  label: string;\n}\n\nexport interface CustomerData {\n  customerId: number | undefined;\n  customerName: string;\n  mobileNumber: string;\n  createdAt: string | undefined;\n}\n\nexport interface StateCustomer {\n  loading: boolean;\n  dataSearch: CustomerSearch[];\n  data: CustomerData[];\n}\n\nconst initState: StateCustomer = {\n  loading: false,\n  dataSearch: [],\n  data: [],\n};\n\nexport default function (state = initState, action: any): StateCustomer {\n  switch (action.type) {\n    case actions.SEARCH_CUSTOMER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.SEARCH_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        dataSearch: action.data,\n      };\n    case actions.SEARCH_CUSTOMER_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n    case actions.GET_CUSTOMER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.GET_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.data,\n      };\n    case actions.GET_CUSTOMER_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import problemReducers from './problem/reducers';\nimport customerReducers from './customer/reducers'\n\nexport default {\n  problemReducers,\n  customerReducers,\n};\n\n\n","class SuperFetch {\n  fetchObj: any;\n  methods: Array<string>;\n  constructor() {\n    this.fetchObj = {};\n    this.methods = [\"get\", \"post\", \"put\", \"patch\", \"delete\"];\n    this.bindMethod();\n  }\n\n  bindMethod() {\n    this.methods.forEach((method) => {\n      this.fetchObj[method] = this.fetch.bind(this, method);\n    });\n  }\n\n  async fetch(method: string, path: string, bodyObj?: any) {\n    try {\n      const response = await fetch(`${path}`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        method,\n        body: method !== \"get\" ? JSON.stringify(bodyObj) : undefined,\n      });\n\n      const json = await response.json();\n      if (response.status === 401) {\n        localStorage.removeItem(\"isLoggedIn\");\n        return json;\n      } else if (response.status === 403) {\n        return json;\n      } else {\n        return json;\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n  get instance() {\n    return this.fetchObj;\n  }\n}\n\nexport default new SuperFetch().instance;\n","export default {\n  endpoint:\n    process.env.NODE_ENV === \"development\"\n      ? \"http://localhost:9000\"\n      : process.env.REACT_APP_API_ENDPOINT,\n  table: {\n    pageSize: 10,\n  },\n};\n","import SuperFetch from \"../../helpers/superFetch\";\nimport configs from \"../../configs\";\n\nexport default {\n  searchCustomerByname: async (name: string) => {\n    return SuperFetch.get(\n      `${configs.endpoint}/v1/customer/search?keyword=${name}`\n    );\n  },\n\n  getAllCustomer: async (name: string) => {\n    return SuperFetch.get(`${configs.endpoint}/v1/customer?keyword=${name}`);\n  },\n\n  createCustomer: async (data: any) => {\n    return SuperFetch.post(`${configs.endpoint}/v1/customer`, data);\n  },\n};\n","import { notification } from \"antd\";\n\ninterface NOTI_PROPS {\n  type: string;\n  message?: string;\n}\n\nconst openNotificationWithIcon = ({ type, message }: NOTI_PROPS) => {\n  notification[type]({\n    message: type,\n    description: message || 'ขอภัยในความไม่สะดวกระบบไม่สามารถใช้งานได้ชั่วคราว กรุณาลองใหม่ภายหลัง',\n  });\n};\n\nexport { openNotificationWithIcon };\n","import {\n  takeEvery,\n  all,\n  delay,\n  race,\n  fork,\n  call,\n  put,\n} from \"redux-saga/effects\";\nimport { message } from \"antd\";\n\nimport actions from \"./action\";\nimport services from \"./service\";\nimport { openNotificationWithIcon } from \"../../helpers/error-handler\";\n\nfunction* searchCustomerWorker() {\n  yield takeEvery(actions.SEARCH_CUSTOMER, function* (props: any) {\n    let hide;\n    try {\n      hide = message.loading(\"Loading\");\n      let { res, timeout } = yield race({\n        res: call(services.searchCustomerByname, props.name),\n        timeout: delay(15000),\n      });\n\n      hide();\n      if (res.object === \"customer\" && !timeout) {\n        yield put({\n          type: actions.SEARCH_CUSTOMER_SUCCESS,\n          data: res.rows,\n        });\n      } else {\n        openNotificationWithIcon({ type: \"error\", message: res.message });\n      }\n    } catch (error) {\n      openNotificationWithIcon({ type: \"error\" });\n    }\n  });\n}\n\nfunction* getAllCustomerWorker() {\n  yield takeEvery(actions.GET_CUSTOMER, function* (props: any) {\n    let hide;\n    try {\n      hide = message.loading(\"Loading\");\n      let { res, timeout } = yield race({\n        res: call(services.getAllCustomer, props.name),\n        timeout: delay(15000),\n      });\n\n      hide();\n      if (res.object === \"customer\" && !timeout) {\n        yield put({\n          type: actions.GET_CUSTOMER_SUCCESS,\n          data: res.rows,\n        });\n      } else {\n        openNotificationWithIcon({ type: \"error\", message: res.message });\n      }\n    } catch (error) {\n      openNotificationWithIcon({ type: \"error\" });\n    }\n  });\n}\n\nfunction* createCustomerWorker() {\n  yield takeEvery(actions.CREATE_CUSTOMER, function* (props: any) {\n    let hide;\n    try {\n      hide = message.loading(\"Loading\");\n      let { res, timeout } = yield race({\n        res: call(services.createCustomer, props.data),\n        timeout: delay(15000),\n      });\n\n      hide();\n      if (res.object === \"customer\" && !timeout) {\n        yield put({\n          type: actions.CREATE_CUSTOMER_SUCCESS,\n        });\n        props.redirect();\n\n        openNotificationWithIcon({ type: \"success\", message: res.message });\n      } else {\n        openNotificationWithIcon({ type: \"error\", message: res.message });\n      }\n    } catch (error) {\n      openNotificationWithIcon({ type: \"error\" });\n    }\n  });\n}\n\nexport default function* () {\n  yield all([\n    fork(searchCustomerWorker),\n    fork(getAllCustomerWorker),\n    fork(createCustomerWorker),\n  ]);\n}\n","import SuperFetch from '../../helpers/superFetch';\nimport configs from '../../configs'\n\nexport default {\n    getService: async (keyword: string) => {\n        return SuperFetch.get(`${configs.endpoint}/v1/problem?keyword=${keyword}`)\n    },\n\n    createProblem: async (data) => {\n        return SuperFetch.post(`${configs.endpoint}/v1/problem`, data)\n    }\n}","import {\n  takeEvery,\n  all,\n  delay,\n  race,\n  fork,\n  call,\n  put,\n} from \"redux-saga/effects\";\nimport { message } from \"antd\";\n\nimport actions from \"./action\";\nimport services from \"./service\";\nimport { openNotificationWithIcon } from \"../../helpers/error-handler\";\n\nfunction* getDataProblemWorker() {\n  yield takeEvery(actions.GET_PROBLEM, function* (props: any) {\n    let hide;\n    try {\n      hide = message.loading(\"Loading\");\n      let { res, timeout } = yield race({\n        res: call(services.getService, props.keyword),\n        timeout: delay(15000),\n      });\n\n      hide();\n      if (res.object === \"problem\" && !timeout) {\n        yield put({\n          type: actions.GET_PROBLEM_SUCCESS,\n          data: res.rows,\n        });\n      } else {\n        openNotificationWithIcon({ type: \"error\", message: res.message });\n      }\n    } catch (error) {\n      openNotificationWithIcon({ type: \"error\" });\n    }\n  });\n}\n\nfunction* createProblemWorker() {\n  yield takeEvery(actions.CREATE_PROBLEM, function* (props: any) {\n    let hide;\n    try {\n      hide = message.loading(\"Loading\");\n      let { res, timeout } = yield race({\n        res: call(services.createProblem, props.data),\n        timeout: delay(15000),\n      });\n\n      hide();\n      if (res.object === \"problem\" && !timeout) {\n        yield put({\n          type: actions.CREATE_PROBLEM_SUCCESS,\n        });\n\n        props.redirect();\n        openNotificationWithIcon({ type: \"success\", message: res.message });\n      } else {\n        openNotificationWithIcon({ type: \"error\", message: res.message });\n      }\n    } catch (error) {\n      openNotificationWithIcon({ type: \"error\" });\n    }\n  });\n}\n\nexport default function* () {\n  yield all([fork(getDataProblemWorker), fork(createProblemWorker)]);\n}\n","import { all } from 'redux-saga/effects';\nimport customerSagas from './customer/saga'\nimport dashboardSagas from './problem/saga'\n\nexport default function* rootSaga() {\n  yield all([\n    customerSagas(),\n    dashboardSagas(),\n  ]);\n} ","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\n\nimport rootReducers from './root-reducers';\nimport rootSaga from './root-sagas';\n\nconst createHistory = require(\"history\").createBrowserHistory\nconst history = createHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [routeMiddleware, sagaMiddleware];\n\nconst createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  ...rootReducers\n})\n\nconst store = createStore(\n  createRootReducer(history),\n  compose(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\nexport { store, history };\n","import React from \"react\";\nimport 'antd/dist/antd.css';\nimport { Provider } from \"react-redux\";\nimport IntlProvider from \"./lang/intl-provider\";\nimport getLocale from \"./lang/get-locale\";\nimport getMessages from \"./lang/get-messages\";\nimport PublicRoutes from \"./router\";\nimport { store, history } from \"./reduxs/store\";\n\nclass App extends React.Component {\n  state = {\n    locale: null,\n    messages: null\n  };\n  async componentDidMount() {\n    const locale = await getLocale();\n    const messages = await getMessages(locale);\n    this.setState({ locale, messages });\n  }\n\n  render() {\n    const { locale, messages } = this.state;\n    return (\n      <IntlProvider locale={locale} messages={messages}>\n        <Provider store={store}>\n          <PublicRoutes history={history} />\n        </Provider>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}